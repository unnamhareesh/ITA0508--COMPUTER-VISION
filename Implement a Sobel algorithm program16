import cv2
import numpy as np

def sobel_filter(image_path):
    """
    Applies the Sobel filter to an input image using OpenCV.

    Args:
        image_path (str): The path to the input image file.

    Returns:
        tuple: A tuple containing the original image, the horizontal gradient image,
               the vertical gradient image, and the combined gradient magnitude image.
               Returns None if the image cannot be loaded.
    """
    try:
        # Read the image in grayscale
        img = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
        if img is None:
            print(f"Error: Could not load image at {image_path}")
            return None

        # Define the Sobel kernels
        sobel_x = np.array([[-1, 0, 1],
                            [-2, 0, 2],
                            [-1, 0, 1]])

        sobel_y = np.array([[-1, -2, -1],
                            [ 0,  0,  0],
                            [ 1,  2,  1]])

        # Apply the Sobel kernels using convolution
        gradient_x = cv2.filter2D(img, cv2.CV_64F, sobel_x)
        gradient_y = cv2.filter2D(img, cv2.CV_64F, sobel_y)

        # Calculate the magnitude of the gradient
        gradient_magnitude = np.sqrt(gradient_x**2 + gradient_y**2)

        # Normalize the gradient magnitude to the range [0, 255] and convert to uint8
        gradient_magnitude = cv2.normalize(gradient_magnitude, None, 0, 255, cv2.NORM_MINMAX, cv2.CV_8U)

        return img, gradient_x, gradient_y, gradient_magnitude

    except Exception as e:
        print(f"An error occurred: {e}")
        return None

if __name__ == '__main__':
    # Example usage: Replace 'input.jpg' with the path to your image
    image_file = 'Hareesh.jpg'
    results = sobel_filter(image_file)

    if results:
        original_image, grad_x, grad_y, grad_mag = results

        # Display the images
        cv2.imshow('Original Image', original_image)
        cv2.imshow('Sobel Gradient X', cv2.convertScaleAbs(grad_x))
        cv2.imshow('Sobel Gradient Y', cv2.convertScaleAbs(grad_y))
        cv2.imshow('Sobel Gradient Magnitude', grad_mag)
        cv2.waitKey(0)
        cv2.destroyAllWindows()
